#!/usr/bin/env bash

# XDG variables
export XDG_CONFIG_HOME="$HOME/.config"
export XDG_DATA_HOME="$HOME/.local/share"
export XDG_CACHE_HOME="$HOME/.cache"
export XDG_STATE_HOME="$HOME/.local/state"

#     _
#  __| |_____ __
# / _` / -_) V /
# \__,_\___|\_/
#
# environment variables for development

#### Python

# set custom startup script (that disables python history)
PYTHONSTARTUP="$XDG_CONFIG_HOME"'/python/pythonrc'
export PYTHONSTARTUP

#### Rustup & Cargo

# default cargo install location
D_CARGO_HOME="$HOME"'/.cargo'

# if the default isn't already installed we can setup
# our own definitions for how it should be installed
if ! [ -d "$D_CARGO_HOME" ]; then
    # define install locations of cargo and rustup
    CARGO_HOME="$XDG_DATA_HOME"'/cargo'
    RUSTUP_HOME="$XDG_DATA_HOME"'/rustup'
    export CARGO_HOME
    export RUSTUP_HOME

    # include environment definitions
    [ -d "$CARGO_HOME" ] && { . "$CARGO_HOME"'/env'; }
else
    # include environment definitions
    [ -d "$D_CARGO_HOME" ] && { . "$D_CARGO_HOME"'/env'; }
fi
unset D_CARGO_HOME

#### Go

# default go install location
D_GOPATH="$HOME"'/go'

# only make environment changes if go
# is currently installed
if [ -n "$(command -v go)" ]; then
    # if go already stores files don't change
    # the GOPATH location and just add to PATH
    if [ -d "$D_GOPATH" ]; then
        GOPATH="$D_GOPATH"
    else
        GOPATH="$XDG_DATA_HOME"'/go'
    fi
    
    # add bin directory to path
    PATH="$GOPATH/bin:$PATH"

    export GOPATH
    export PATH
fi

unset D_GOPATH

#### Java

if [ -n "$(command -v java)" ]; then
    # dynamically evaluate java home of current java version
    JAVA_HOME="$(realpath "$(dirname "$(realpath "$(which java)")")""/..")"
    export JAVA_HOME

    # change java configuration path to standard .config directory
    _JAVA_OPTIONS=-Djava.util.prefs.userRoot="$XDG_CONFIG_HOME"/java
    export _JAVA_OPTIONS
fi

#      _
#  ___| |_ __
# / -_)  _/ _|_
# \___|\__\__(_)
#
# etc. environment variables - typically for shared use

#### Editor - set the default editor

if [ -n "$(command -v vim)" ]; then
    EDITOR='vim'
else
    EDITOR='vi'
fi
export EDITOR

#### Pager - set the default file reader

# configure pager settings with less as a
# fallback if bat doesn't exist
if [ -z "$(command -v bat)" ]; then
    alias bat='less'
    PAGER='less'
else
    PAGER='bat'
fi
export PAGER

#### Browser - set the system browser

# set default web browser to firefox with
# lynx as a backup option
if [ -n "$(command -v firefox)" ]; then
    BROWSER='firefox'
else
    BROWSER='lynx'
fi
export BROWSER

#### Tree - map exa with args to tree

# prefer exa to tree if installed
if [ -n "$(command -v exa)" ]; then
    alias tree='exa --color=always -T'
fi

#               __
#  __ ___ _ _  / _|
# / _/ _ \ ' \|  _|
# \__\___/_||_|_|
#
# environment variables for program configuration

#### Bash Conf

# don't put duplicate lines or space lines in the history
HISTCONTROL=ignoreboth 

# append to the history file, don't overwrite it
shopt -s histappend

# how long the ~/.bash_history file can be
HISTSIZE=1000
HISTFILESIZE=2000

# check the window size after each command and, if necessary,
# update the values of LINES and COLUMNS.
shopt -s checkwinsize

# enable programmable completion features
if ! shopt -oq posix; then
  if [ -f /usr/share/bash-completion/bash_completion ]; then
    . /usr/share/bash-completion/bash_completion
  elif [ -f /etc/bash_completion ]; then
    . /etc/bash_completion
  fi
fi

#### Less Conf

# https://relentlesscoding.com/posts/make-less-options-permanent-or-the-missing-lessrc/
export LESS="--mouse IFRSX" # add mouse support
export LESSHISTFILE='-' # remove history file

#### Cuda Conf

# change the path of the cache file
export CUDA_CACHE_PATH="$XDG_CACHE_HOME"'/nv'

#### Readline Conf 

# change the path of the configuration to $HOME/.config/readline/inputrc
export INPUTRC="$XDG_CONFIG_HOME"'/readline/inputrc'
